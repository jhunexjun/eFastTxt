<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        HwD4AB8A+AAfAPjDHwD/w/8A
</value>
  </data>
</root>